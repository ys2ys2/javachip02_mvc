<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <!-- Controller 의 요청 메소드 실행 결과로 반환되는 뷰이름은 아래의 값들과 결합하여 실제 웹페이지로 세팅됨 -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
    
    <!-- 파일 업로드 관련 -->
    <beans:bean id="multipartResolver"
                class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </beans:bean>
    
    <!-- 프로젝트 내의 빈 등록을 컴포넌트 스캔을 이용해서 특정 어노테이션이 붙은 자바 클래스를 자동으로 빈으로 등록함 
         @Component, @Configuration, @Controller, @Service, @Repository @RestController 등-->
    <context:component-scan base-package="com.human.web" />
    
    
</beans:beans>