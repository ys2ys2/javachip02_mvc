<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.web.mapper.M_MemberMapper">

		<!-- 아이디 중복검사   -->
	   <select id="checkId" parameterType="string" resultType="int">
	    SELECT COUNT(*) FROM m_member WHERE m_email = #{m_email}
	</select>
	
		<!--닉네임 중복검사  -->
		<select id="checkNickname" parameterType="string" resultType="int">
			SELECT COUNT(*) FROM m_member where m_nickname = #{m_nickname}
		</select>
	 
	    <!-- 회원 가입 -->
	   <insert id="insertM_Member" parameterType="com.human.web.vo.M_MemberVO" useGeneratedKeys="true" keyProperty="m_idx" >
	    INSERT INTO m_member (m_email, m_password, m_nickname, m_registration_type)
	    VALUES (#{m_email}, #{m_password}, #{m_nickname}, #{m_registration_type})
	</insert>
	

	<!-- 로그인 -->
	<select id="login" parameterType="map" resultType="com.human.web.vo.M_MemberVO">
	
		select m_idx, m_email, m_password, m_nickname, m_profile
			from m_member
			where m_email=#{m_email}
			and m_password=#{m_password}
			and m_status='active'
	
	</select> 
	
   <!-- 이메일로 회원 정보 조회 쿼리 -->
    <select id="findByEmail" parameterType="String" resultType="com.human.web.vo.M_MemberVO">
        SELECT * FROM m_member WHERE m_email = #{email};
    </select>
    
 <!-- 카카오 ID로 기존 회원 확인 -->
    <select id="findByKakaoId" parameterType="long" resultType="com.human.web.vo.M_MemberVO">
        SELECT * FROM m_member WHERE m_email = CONCAT(#{kakaoId}, '@kakao.com')
    </select>
    
       <!-- Google ID로 회원 정보를 조회하는 쿼리 -->
    <select id="getMemberByGoogleId" parameterType="string" resultType="com.human.web.vo.M_MemberVO">
        SELECT m_idx, m_email, m_password, m_nickname, m_status, m_registration_type,  m_profile
        FROM m_member
        WHERE m_email = #{googleId}
    </select>
    
 
	<!-- 회원정보 변경 -->
	<update id="updateMember" parameterType="com.human.web.vo.M_MemberVO">
	    update m_member
	    <set>
	    	m_nickname = #{m_nickname}
	        <if test="m_password != null">, m_password =#{m_password}</if>
	    </set>
	    where m_idx = #{m_idx}
	</update>
	
	<!-- 프로필 이미지 수정 <-->
	<update id="updateProfileImage" parameterType="com.human.web.vo.M_MemberVO">
		UPDATE m_member 
		SET
		m_profile = #{m_profile}
 		WHERE m_idx = #{m_idx}
	</update>
	
	
	<!-- 회원조회 -->
	<select id="getMember" parameterType="int" resultType="com.human.web.vo.M_MemberVO">
		
		select * from m_member
			where m_idx=#{m_idx}
	
	</select>
	
		<!-- 회원탈퇴 -->
	<update id="cancel" parameterType="int">
	    update m_member set m_status='deleted'
	    where m_idx=#{m_idx}
	</update>
	
	
	<!--회원정보 찾기(email)  -->		
	<select id="findIdByRegistrationAndNickname" resultType="String">
	SELECT m_email
	FROM m_member
	WHERE m_registration_type = #{registrationType}
	AND m_nickname = #{nickname}
	</select>


	<!--회원정보 찾기(Password) -->
	<update id="updatePassword" parameterType="map">
	 UPDATE m_member 
	 SET m_password = #{newPassword}
	where m_email =#{m_email}
	</update>
	
   
</mapper>
